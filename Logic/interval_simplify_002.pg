## DESCRIPTION
## Algebra
## ENDDESCRIPTION

## KEYWORDS('algebra','inequalities')
## Tagged by dbw 9/1/09

## DBsubject('Algebra')
## DBchapter('Equations and Inequalities')
## DBsection('Linear Inequalities')
## Date('9/1/09')
## Author('D. B. Walton')
## Institution('James Madison University')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
  "PGstandard.pl",
  "PGunion.pl",            # Union College utilities
  "MathObjects.pl",
  "alignedChoice.pl",      # for aligned answer blanks
);

TEXT(beginproblem);

###################################
# Setup

Context("Interval");

@overlapLeft = (0, 0, 1, 1);
@overlapRight = (0, 1, 0, 1);
@overlap = NchooseK(4,4);

@leftCap = ("(", "[");
@rightCap = (")", "]");

# Each interval will be based on the same five points (plus +/- Infinity)
$pts[0] = random(-10,-2,1);
for $i (1..5) {
	$pts[$i] = $pts[$i-1] + random(1,3,1);
};

BEGIN_TEXT
Simplify each of the following sets and express the result using interval notation.

$PAR
$BBLOCKQUOTE
END_TEXT

# Repeat the same type of problem multiple times.
for $i (@overlap) {

# Choose 6 points, and we build overlapping intervals from that.
@ptsUsed = num_sort((-1..6)[NchooseK(8, 6)]);
@ptsInclude = ( random(0,1,1), random(0,1,1), random(0,1,1), 
				random(0,1,1), random(0,1,1), random(0,1,1) );

# Dealing with -infinity
if ($ptsUsed[0] == -1) {
	$ptsInclude[0] = 0;
	$leftA = "(-INF";
}
else {
	$leftA = $leftCap[$ptsInclude[0]] .	"$pts[$ptsUsed[0]]";
};
# Dealing with +infinity
if ($ptsUsed[5] == 6) {
	$ptsInclude[5] = 0;
	$rightA = "INF)";
}
else {
	$rightA = "$pts[$ptsUsed[5]]" . $rightCap[$ptsInclude[5]];
};
$firstInt = Interval($leftA . 
					",$pts[$ptsUsed[2-$overlapLeft[$i]]]" . 
					$rightCap[$ptsInclude[2]] . "U" .
					$leftCap[$ptsInclude[3]] . 
					"$pts[$ptsUsed[3+$overlapRight[$i]]]," . 
					$rightA);

$secondInt = Interval($leftCap[$ptsInclude[1]] . 
						"$pts[$ptsUsed[1+$overlapLeft[$i]]],$pts[$ptsUsed[4-$overlapRight[$i]]]" .
						$rightCap[$ptsInclude[4]]);

if ($overlapLeft[$i] == 0) {
	if ($overlapRight[$i] == 0) {
		$answerInt = Interval($leftCap[$ptsInclude[1]] . 
								"$pts[$ptsUsed[1]],$pts[$ptsUsed[2]]" .
								$rightCap[$ptsInclude[2]] . "U" . 
								$leftCap[$ptsInclude[3]] .
								"$pts[$ptsUsed[3]],$pts[$ptsUsed[4]]" .
								$rightCap[$ptsInclude[4]]);
	} 
	else {
		$answerInt = Interval($leftCap[$ptsInclude[1]] . 
								"$pts[$ptsUsed[1]],$pts[$ptsUsed[2]]" .
								$rightCap[$ptsInclude[2]]);
	};
}
else {
	if ($overlapRight[$i] == 0) {
		$answerInt = Interval($leftCap[$ptsInclude[3]] .
								"$pts[$ptsUsed[3]],$pts[$ptsUsed[4]]" .
								$rightCap[$ptsInclude[4]]);
	} 
	else {
		$answerInt = Interval("{}");
	};
};
						

###################################
# Main text

BEGIN_TEXT
$PAR
\(\Big(\{$firstInt->TeX\}\Big) \cap \{$secondInt->TeX\} = \)
\{ ans_rule( 20 ) \}.
END_TEXT

###################################
# Answer checking

$showPartialCorrectAnswers = 1;
ANS($answerInt->cmp);

};

BEGIN_TEXT
$EBLOCKQUOTE

$PAR
Type $BBOLD U $EBOLD for the union symbol, $BBOLD INF $EBOLD for \(\infty\), and $BBOLD {} $EBOLD for the empty set \(\emptyset\).
END_TEXT

###################################

ENDDOCUMENT();        # This should be the last executable line in the problem.;
