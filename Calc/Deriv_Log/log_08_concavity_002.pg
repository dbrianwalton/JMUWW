## DESCRIPTION
## Algebra
## ENDDESCRIPTION

## KEYWORDS('calculus','derivative', 'logarithm', 'concavity')
## Tagged by dbw 8/1/11

## DBsubject('Calculus')
## DBchapter('')
## DBsection('')
## Date('8/1/11')
## Author('D. B. Walton')
## Institution('James Madison University')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGjmu_poly.pl",
  "problemRandomize.pl"
);

TEXT(beginproblem);

###################################
# Setup

Context("Numeric");
##############################################

$pr = ProblemRandomize(onlyAfterDue=>0);

do {
    $n = non_zero_random(-5,5);
} while ($n==1);
$k = random(1,9);

$func = Compute("x^$n*ln(x^$k)")->reduce('(-x)-y'=>0, '(-x)+y'=>0);

Context("Interval");

$logRt = FractionString([-2*$n+1, $n*($n-1)]);
$root = "e^($logRt)";

## k even means domain is (-inf,0)U(0,inf)
if ($k % 2 == 0) {
  # n even means no sign change at 0
  if ($n%2 == 0) {
    # Since integers, could be replaced by $k>0
    if ($k*$n*($n-1) > 0) {
      $ccuInterval = Compute("(-INF,-$root), ($root,INF)");
      $ccdInterval = Compute("(-$root,0), (0,$root)");
    } else {
      $ccuInterval = Compute("(-$root,0), (0,$root)");
      $ccdInterval = Compute("(-INF,-$root), ($root,INF)");
    }
  # n odd means sign changes at 0
  } else {
    # Since integers, could be replaced by $k>0
    if ($k*$n*($n-1) > 0) {
      $ccuInterval = Compute("(-$root,0), ($root,INF)");
      $ccdInterval = Compute("(-INF,-$root), (0,$root)");
    } else {
      $ccuInterval = Compute("(-INF,-$root), (0,$root)");
      $ccdInterval = Compute("(-$root,0), ($root,INF)");
    }
  }

## k odd means domain is (0,inf)
} else {
  # Since integers, could be replaced by $k>0
  if ($k*$n*($n-1) > 0) {
    $ccuInterval = List(Compute("($root,INF)"));
    $ccdInterval = List(Compute("(0,$root)"));
  } else {
    $ccuInterval = List(Compute("(0,$root)"));
    $ccdInterval = List(Compute("($root,INF)"));
  }
}

Context()->texStrings;
BEGIN_TEXT
$PAR Determine the intervals where the function \(f(x) = $func\)
is concave up and where it is concave down.
$BR 
$BBLOCKQUOTE
$BR
\(f\) is concave up on: \{ ans_rule(30) \}
$BR $BR
\(f\) is concave down on: \{ ans_rule(30) \}
$BR
$EBLOCKQUOTE

$PAR
List open intervals separated by commas.  Type ${BBOLD}NONE${EBOLD} if there are no such intervals. Type ${BBOLD}INF${EBOLD} for \(\infty\).
END_TEXT

Context()->normalStrings;

$showPartialCorrectAnswers = 1;

ANS( $ccuInterval->cmp );
ANS( $ccdInterval->cmp );

ENDDOCUMENT();        # This should be the last executable line in the problem.;
