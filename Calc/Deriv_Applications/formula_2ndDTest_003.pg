# DESCRIPTION
#   Given the algebraic formula for a function (simple rational),
#   identify all of the critical points and then apply the 2nd derivative test.
# ENDDESCRIPTION

## Author('D. B. Walton')
## Institution('James Madison University')
## KEYWORDS('function','derivative', 'second derivative test')
## Date('8/23/10')

## DBsubject('Calculus')
## DBchapter('')
## DBsection('')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "contextString.pl",
  "PGchoicemacros.pl",
  "PGgraphmacros.pl",
  "PGpolynomialmacros.pl",
);

TEXT(beginproblem);

##########
# Setup context specific items
##########
Context("Numeric");

##########
# Determine random character for problem.
##########

# f(x) = ax+b+c/x
#  Need c/a to be positive (a & c same sign)
#  For simplicity, make c/a a square

$sgn = non_zero_random(-1,1);
$a =  $sgn * random(1,4);
$b = random(-9,9);
$p = random(1,5);
$c = $a * $p**2;

$func = Compute("$a*x+$b+$c/x")->reduce('(-x)-y'=>0, '(-x)+y'=>0);
$f1d = $func->D();
$f2d = $f1d->D();

@signChar = ("-", "", "+");

@critPts = (-$p, $p);
$critPtsAns = List(@critPts);

@f2vals = ( $f2d->eval(x=>$critPts[0]), $f2d->eval(x=>$critPts[1]) );
$f2ValAns = List(@f2vals);

if ($sgn > 0) {
    @classify = ("MAX", "MIN");
} else {
    @classify = ("MIN", "MAX");
}

Context()->texStrings;
BEGIN_TEXT
$PAR
Identify all $BBOLD critical points $EBOLD  of the function \(f(x) = $func\).
List the \(x\)-values of these critical points as a comma-separated list in increasing order.
$BR
Critical points of \(f\): \{ ans_rule(30) \}

$PAR
Compute the value \(f''(x)\) at each of these points.
Use a comma-separated list referring to intervals from left to right.
$BR
Values of \(f''(x)\): \{ ans_rule(30) \}

$PAR
For each of the points above (and in the same order), indicate if the Second Derivative Test indicates
that the point is a local maximum, a local minimum, not an extreme, or undetermined by creating a comma-separated list 
using keywords $BBOLD MAX $EBOLD, $BBOLD MIN $EBOLD, $BBOLD NOT $EBOLD, or $BBOLD UND $EBOLD, respectively.
$BR
Classification of points: \{ ans_rule(40) \}

END_TEXT

Context()->normalStrings;

$showPartialCorrectAnswers = 1;


ANS( $critPtsAns->cmp(ordered=>1) );
ANS( $f2ValAns->cmp(ordered=>1) );

Context("String")->strings->add("MAX"=>{}, "MIN"=>{}, "NOT"=>{}, "UND"=>{});
Context()->operators->redefine(",", from=>"Numeric");
ANS( List(@classify)->cmp(ordered=>1, entry_type=>"classification", showHints=>0) );

COMMENT("Two symmetric critical points, x=a and x=-a; 2nd derivative test is conclusive at each one.");

ENDDOCUMENT();        # This should be the last executable line in the problem.;
